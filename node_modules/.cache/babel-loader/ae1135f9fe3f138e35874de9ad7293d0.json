{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nconst config = {\n  apiKey: \"AIzaSyDIkDB_zXJGaBvPR00-FFxAcQMw5gLIs1c\",\n  authDomain: \"codinggurus-c589d.firebaseapp.com\",\n  projectId: \"codinggurus-c589d\",\n  storageBucket: \"codinggurus-c589d.appspot.com\",\n  messagingSenderId: \"373545772959\",\n  appId: \"1:373545772959:web:d78c0bfda5db8d15543faa\",\n  measurementId: \"G-GLJB3ZMWQH\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      display,\n      email\n    } = user.Auth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        created\n      });\n    } catch (error) {}\n  }\n}; //   Google auth \n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //     gives use acess to auth libary\n\nconst provider = new firebase.auth.GoogleAuthProvider(); //   what to trigger the google pop up\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/spiritualdeveloper/Desktop/Projects/CodingGuru/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","display","email","user","Auth","createdAt","Date","set","displayName","created","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,2BAAP;AACA,OAAO,sBAAP;AAGA,MAAMC,MAAM,GAAG;AAEPC,EAAAA,MAAM,EAAE,yCAFD;AAGPC,EAAAA,UAAU,EAAE,mCAHL;AAIPC,EAAAA,SAAS,EAAE,mBAJJ;AAKPC,EAAAA,aAAa,EAAE,+BALR;AAMPC,EAAAA,iBAAiB,EAAE,cANZ;AAOPC,EAAAA,KAAK,EAAE,2CAPA;AAQPC,EAAAA,aAAa,EAAE;AARR,CAAf;AAWM,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAqC;AAC9E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAOE,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAjB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAqB;AACjB,UAAM;AAAEC,MAAAA,OAAF;AAAYC,MAAAA;AAAZ,QAAsBC,IAAI,CAACC,IAAjC;AACA,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAGF,QAAI;AACF,YAAMd,OAAO,CAACe,GAAR,CAAa;AAClBC,QAAAA,WADkB;AAElBN,QAAAA,KAFkB;AAGlBO,QAAAA;AAHkB,OAAb,CAAN;AAKD,KAND,CAME,OAAMC,KAAN,EAAY,CAEb;AACF;AAGA,CAzBM,C,CA2BT;;AACE9B,QAAQ,CAAC+B,aAAT,CAAuB9B,MAAvB;AAEA,OAAO,MAAM+B,IAAI,GAAGhC,QAAQ,CAACgC,IAAT,EAAb;AACP,OAAO,MAAMnB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB,C,CACT;;AACE,MAAMoB,QAAQ,GAAG,IAAIjC,QAAQ,CAACgC,IAAT,CAAcE,kBAAlB,EAAjB,C,CACF;;AACED,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAE,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AAEP,eAAejC,QAAf","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\n\nconst config = {\n    \n        apiKey: \"AIzaSyDIkDB_zXJGaBvPR00-FFxAcQMw5gLIs1c\",\n        authDomain: \"codinggurus-c589d.firebaseapp.com\",\n        projectId: \"codinggurus-c589d\",\n        storageBucket: \"codinggurus-c589d.appspot.com\",\n        messagingSenderId: \"373545772959\",\n        appId: \"1:373545772959:web:d78c0bfda5db8d15543faa\",\n        measurementId: \"G-GLJB3ZMWQH\"\n      };\n      \n      export const createUserProfileDocument = async (userAuth, additionalData ) => {\n      if (!userAuth) return;\n\n      const  userRef = firestore.doc(`users/${userAuth.uid}`);\n\n      const snapShot = await userRef.get();\n\n      console.log(snapShot);\n      if(!snapShot.exists) {\n          const { display , email } = user.Auth;\n          const createdAt = new Date();\n\n\n        try {\n          await userRef.set ({\n           displayName,\n           email,\n           created\n          })\n        } catch(error){\n\n        }\n      }\n\n       \n      }\n\n    //   Google auth \n      firebase.initializeApp(config);\n\n      export const auth = firebase.auth();\n      export const firestore = firebase.firestore();\n    //     gives use acess to auth libary\n      const provider = new firebase.auth.GoogleAuthProvider();\n    //   what to trigger the google pop up\n      provider.setCustomParameters({prompt: 'select_account'});\n      export const signInWithGoogle =() => auth.signInWithPopup(provider);\n\n      export default firebase;\n"]},"metadata":{},"sourceType":"module"}